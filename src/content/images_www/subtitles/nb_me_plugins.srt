1
00:00:00,000 --> 00:00:09,266
Hi, this screencast demonstrates how toinstall Java ME SDK plugins into NetBeansIDE

2
00:00:09,266 --> 00:00:14,066
and utilize advanced tooling of the Java ME 8platform.

3
00:00:14,066 --> 00:00:24,599
Before installing Java ME SDK plugins intoNetBeans IDE, please, make sure that thefollowing prerequisites have been completed:

4
00:00:24,600 --> 00:00:28,400
Java ME SDK is installed on your machine,

5
00:00:28,400 --> 00:00:32,066
Java ME support is activated in NetBeansIDE,

6
00:00:32,066 --> 00:00:36,132
and Java ME SDK is registered in the IDE.

7
00:00:36,133 --> 00:00:44,199
You may want to watch the Video of NetBeansIDE Support for Java ME 8 at netbeans.org fordetails.

8
00:00:44,200 --> 00:00:49,733
To install Java ME SDK plugins into NetBeansIDE, you need to

9
00:00:49,733 --> 00:00:57,066
download the Oracle Java ME SDK 8 Pluginsfor NetBeans file from the Java ME SDKdownload page,

10
00:00:57,066 --> 00:01:00,332
unpack the file to a directory on your machine,

11
00:01:00,333 --> 00:01:05,666
launch NetBeans IDE and use NetBeansPlugins manager.

12
00:01:05,666 --> 00:01:12,866
After you've downloaded and unpacked theOracle Java ME SDK 8 Plugins for NetBeansfile,

13
00:01:12,866 --> 00:01:18,332
complete the following steps to install theplugins into NetBeans IDE:

14
00:01:18,333 --> 00:01:24,199
In NetBeans IDE, choose Tools > Pluginsfrom the main IDE's toolbar.

15
00:01:24,200 --> 00:01:28,333
In the Plugins dialog box, click the Settingstab.

16
00:01:28,333 --> 00:01:33,266
Click Add to display the Update CenterCustomizer dialog box.

17
00:01:33,266 --> 00:01:37,599
In the Name field, enter Java ME SDKPlugins.

18
00:01:37,600 --> 00:01:42,200
Leave the Check for updates automaticallyoption selected.

19
00:01:42,200 --> 00:01:50,400
In the URL field, use the file command topoint to the location where you haveunpacked your plugins.

20
00:01:50,400 --> 00:01:56,266
Click OK to add the Java ME SDK Pluginsupdate center to the Settings tab.

21
00:01:56,266 --> 00:02:03,666
Ensure the Java ME SDK Plugins updatecenter is selected and choose the AvailablePlugins tab.

22
00:02:03,666 --> 00:02:09,199
Select Java ME SDK Tools and Java ME SDKDemos and click Install.

23
00:02:09,200 --> 00:02:13,266
At the Welcome panel of the Installer dialogbox, click Next.

24
00:02:13,266 --> 00:02:21,599
Review the license agreement, click theacceptance checkbox, and click Install tobegin the installation.

25
00:02:21,600 --> 00:02:29,800
When the installation is successfullycompleted, leave the Restart IDE now optionselected, and click Finish.

26
00:02:29,800 --> 00:02:36,866
After the IDE restarts, you need to make surethe plugins you have installed are active.

27
00:02:36,866 --> 00:02:41,466
Choose Tools > Plugins to display thePlugins manager.

28
00:02:41,466 --> 00:02:43,599
Click the Installed tab,

29
00:02:43,600 --> 00:02:54,266
select the Show details option and scroll tofind the Java ME SDK Demos and Java MESDK Tools plugins in the list.

30
00:02:54,266 --> 00:03:04,399
The green icon for the plugin to the leftreflects the active status of the plugin.Click Close to close the Plugins manager.

31
00:03:04,400 --> 00:03:12,266
After both the plugins are installed, you cantake a look at Java ME Platform SDK sampleprojects

32
00:03:12,266 --> 00:03:19,132
which highlight some of the technologies andAPIs that are supported by the emulator.

33
00:03:19,133 --> 00:03:22,066
Choose File > New Project.

34
00:03:22,066 --> 00:03:30,599
In the New Project dialog box, expand theSamples category and choose Java ME SDK8.0.

35
00:03:30,600 --> 00:03:35,800
Java ME sample applications display in theProjects list on the right.

36
00:03:35,800 --> 00:03:39,666
Select DataCollection Demo and click Next.

37
00:03:39,666 --> 00:03:49,532
In the Name and Location page of the wizard,accept the default values for the project name,location, et cetera and click Finish.

38
00:03:49,533 --> 00:03:55,199
The DataCollectionDemo project is createdand opened in the IDE.

39
00:03:55,200 --> 00:04:02,133
Let's run the project using the Java ME SDKemulator from the Java ME SDK Tools plugin.

40
00:04:02,133 --> 00:04:08,266
The plugin integrates Java ME utilities into thestandard NetBeans IDE menus.

41
00:04:08,266 --> 00:04:17,532
For example, the Tools > Java ME menu is theplace to launch a set of tools including theDevice Selector.

42
00:04:17,533 --> 00:04:21,333
The IDE displays the Device Selector window

43
00:04:21,333 --> 00:04:29,066
where all available devices simulated by theJava ME SDK emulator are grouped byplatform.

44
00:04:29,066 --> 00:04:34,332
Each subnode represents an emulator skinfor a device.

45
00:04:34,333 --> 00:04:41,333
EmbeddedDevice1 and EmbeddedDevice2are two instances of a CLDC device.

46
00:04:41,333 --> 00:04:51,799
They have identical capability sets but uniquephone numbers, making it easy to testcommunication between two devices.

47
00:04:51,800 --> 00:04:58,266
You can double-click any device node to openthe Device Information tab in the IDE

48
00:04:58,266 --> 00:05:04,732
and view such device details as supportedruntimes and extensions.

49
00:05:04,733 --> 00:05:13,366
Right-click on a device and select theDataCollectionDemo project to run from thecontext menu.

50
00:05:13,366 --> 00:05:20,299
In this demo, several data collector IMletsread data from peripheral devices

51
00:05:20,300 --> 00:05:26,766
using the Device I/O API and send the data to a data processor.

52
00:05:26,766 --> 00:05:32,966
Select all the Imlets to run and click OK.

53
00:05:32,966 --> 00:05:39,366
Click Output to see the details of running yourapplication.

54
00:05:39,366 --> 00:05:44,366
As an alternative you can choose Window >Output in the IDE.

55
00:05:44,366 --> 00:05:49,766
When you are done, click Stop and close thedevice emulator.

56
00:05:49,766 --> 00:06:01,499
The Java ME SDK Tools plugin enables you touse common profiling tasks, such as CPU,memory or network profiling.

57
00:06:01,500 --> 00:06:08,833
The plugin also integrates the Java MEtooling into the Profiler > Java ME menu,

58
00:06:08,833 --> 00:06:14,033
which is the place to work with the MemoryMonitor and Network Monitor.

59
00:06:14,033 --> 00:06:22,166
To start a profiling session, right-click theDataCollectionDemo project and chooseProfile.

60
00:06:22,166 --> 00:06:28,366
In the Profile dialog box, leave CPU Profilerselected and click Run.

61
00:06:28,366 --> 00:06:33,799
The emulator opens with theDataCollectionDemo application running.

62
00:06:33,800 --> 00:06:42,066
Run the IMLets, interact with the applicationas needed, and exit the application.

63
00:06:42,066 --> 00:06:48,532
The IDE displays the profile data in the CPUsnapshot window.

64
00:06:48,533 --> 00:06:53,799
Click the Info tab to view the summary of thesession.

65
00:06:53,800 --> 00:07:00,066
The data collected during the emulationsession can be saved for future reference.

66
00:07:00,066 --> 00:07:03,466
Well, that's all for the screencast.

67
00:07:03,466 --> 00:07:05,732
Thank you for watching.

